{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\MY Projects\\\\Cloned Projects\\\\Sharpner-React\\\\Sharp-react\\\\pages\\\\aboutus\\\\[devId].js\";\nimport React from 'react';\nimport { useRouter } from 'next/router';\n\nconst DeveloperDetails = () => {\n  const router = useRouter();\n  const {\n    devId\n  } = router.query;\n  const developers = [{\n    id: 1,\n    name: 'Yash',\n    role: 'Senior Developer'\n  }, {\n    id: 2,\n    name: 'Vaibhav',\n    role: 'Backend Developer'\n  }, {\n    id: 3,\n    name: 'Suresh',\n    role: 'Frontend Developer'\n  }];\n  const developer = developers.find(dev => dev.id === parseInt(devId));\n\n  if (!developer) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Developer doesn't exist.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Developer Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"ID: \", developer.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name: \", developer.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Role: \", developer.role]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\nexport default DeveloperDetails;","map":{"version":3,"sources":["F:/MY Projects/Cloned Projects/Sharpner-React/Sharp-react/pages/aboutus/[devId].js"],"names":["React","useRouter","DeveloperDetails","router","devId","query","developers","id","name","role","developer","find","dev","parseInt"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,QAAMC,MAAM,GAAGF,SAAS,EAAxB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAYD,MAAM,CAACE,KAAzB;AAEA,QAAMC,UAAU,GAAG,CACjB;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,MAAf;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GADiB,EAEjB;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,SAAf;AAA0BC,IAAAA,IAAI,EAAE;AAAhC,GAFiB,EAGjB;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,QAAf;AAAyBC,IAAAA,IAAI,EAAE;AAA/B,GAHiB,CAAnB;AAMA,QAAMC,SAAS,GAAGJ,UAAU,CAACK,IAAX,CAAiBC,GAAD,IAASA,GAAG,CAACL,EAAJ,KAAWM,QAAQ,CAACT,KAAD,CAA5C,CAAlB;;AAEA,MAAI,CAACM,SAAL,EAAgB;AACd,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,yBAAQA,SAAS,CAACH,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,2BAAUG,SAAS,CAACF,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,2BAAUE,SAAS,CAACD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAxBD;;AA0BA,eAAeP,gBAAf","sourcesContent":["import React from 'react';\r\nimport { useRouter } from 'next/router';\r\n\r\nconst DeveloperDetails = () => {\r\n  const router = useRouter();\r\n  const { devId } = router.query;\r\n\r\n  const developers = [\r\n    { id: 1, name: 'Yash', role: 'Senior Developer' },\r\n    { id: 2, name: 'Vaibhav', role: 'Backend Developer' },\r\n    { id: 3, name: 'Suresh', role: 'Frontend Developer' },\r\n  ];\r\n\r\n  const developer = developers.find((dev) => dev.id === parseInt(devId));\r\n\r\n  if (!developer) {\r\n    return <div>Developer doesn't exist.</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Developer Details</h1>\r\n      <p>ID: {developer.id}</p>\r\n      <p>Name: {developer.name}</p>\r\n      <p>Role: {developer.role}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeveloperDetails;\r\n"]},"metadata":{},"sourceType":"module"}