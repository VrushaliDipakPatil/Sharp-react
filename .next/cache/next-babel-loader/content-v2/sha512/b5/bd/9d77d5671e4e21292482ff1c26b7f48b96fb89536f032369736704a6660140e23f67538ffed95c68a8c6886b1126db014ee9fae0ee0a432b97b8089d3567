{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"F:/MY Projects/Cloned Projects/Sharpner-React/Sharp-react/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"F:/MY Projects/Cloned Projects/Sharpner-React/Sharp-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"F:\\\\MY Projects\\\\Cloned Projects\\\\Sharpner-React\\\\Sharp-react\\\\components\\\\TodoForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// components/TodoForm.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nvar TodoForm = function TodoForm(props) {\n  _s();\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var handleTextChange = function handleTextChange(e) {\n    setText(e.target.value);\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.prev = 1;\n              _context.next = 4;\n              return axios.post('/api/todo', {\n                text: text\n              });\n\n            case 4:\n              setText(''); // Call the parent function to fetch todos after successfully adding a new todo\n\n              props.onTodoAdded();\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('Error adding todo:', _context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a new todo\",\n      value: text,\n      onChange: handleTextChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TodoForm, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["F:/MY Projects/Cloned Projects/Sharpner-React/Sharp-react/components/TodoForm.js"],"names":["React","useState","axios","TodoForm","props","text","setText","handleTextChange","e","target","value","handleSubmit","preventDefault","post","onTodoAdded","console","error"],"mappings":";;;;;;;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACFH,QAAQ,CAAC,EAAD,CADN;AAAA,MACnBI,IADmB;AAAA,MACbC,OADa;;AAG1B,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD,EAAO;AAC9BF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAIA,MAAMC,YAAY;AAAA,wEAAG,iBAAOH,CAAP;AAAA;AAAA;AAAA;AAAA;AACnBA,cAAAA,CAAC,CAACI,cAAF;AADmB;AAAA;AAAA,qBAGXV,KAAK,CAACW,IAAN,CAAW,WAAX,EAAwB;AAAER,gBAAAA,IAAI,EAAJA;AAAF,eAAxB,CAHW;;AAAA;AAIjBC,cAAAA,OAAO,CAAC,EAAD,CAAP,CAJiB,CAKjB;;AACAF,cAAAA,KAAK,CAACU,WAAN;AANiB;AAAA;;AAAA;AAAA;AAAA;AAQjBC,cAAAA,OAAO,CAACC,KAAR,CAAc,oBAAd;;AARiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZL,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAYA,sBACE;AAAM,IAAA,QAAQ,EAAEA,YAAhB;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,gBAFd;AAGE,MAAA,KAAK,EAAEN,IAHT;AAIE,MAAA,QAAQ,EAAEE;AAJZ;AAAA;AAAA;AAAA;AAAA,aADF,eAOE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAWD,CA9BD;;GAAMJ,Q;;KAAAA,Q;AAgCN,eAAeA,QAAf","sourcesContent":["// components/TodoForm.js\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TodoForm = (props) => {\r\n  const [text, setText] = useState('');\r\n\r\n  const handleTextChange = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('/api/todo', { text });\r\n      setText('');\r\n      // Call the parent function to fetch todos after successfully adding a new todo\r\n      props.onTodoAdded();\r\n    } catch (error) {\r\n      console.error('Error adding todo:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add a new todo\"\r\n        value={text}\r\n        onChange={handleTextChange}\r\n      />\r\n      <button type=\"submit\">Add</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n"]},"metadata":{},"sourceType":"module"}