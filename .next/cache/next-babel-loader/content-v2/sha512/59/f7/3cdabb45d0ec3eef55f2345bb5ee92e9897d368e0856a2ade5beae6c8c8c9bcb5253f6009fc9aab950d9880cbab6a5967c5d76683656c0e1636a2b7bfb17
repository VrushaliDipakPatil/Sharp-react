{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\MY Projects\\\\Cloned Projects\\\\Sharpner-React\\\\Sharp-react\\\\components\\\\TodoForm.js\";\n// components/TodoForm.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst TodoForm = props => {\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n\n  const handleTextChange = e => {\n    setText(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      await axios.post('/api/todo', {\n        text\n      });\n      setText(''); // Call the parent function to fetch todos after successfully adding a new todo\n\n      props.onTodoAdded();\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a new todo\",\n      value: text,\n      onChange: handleTextChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\nexport default TodoForm;","map":{"version":3,"sources":["F:/MY Projects/Cloned Projects/Sharpner-React/Sharp-react/components/TodoForm.js"],"names":["React","useState","axios","TodoForm","props","text","setText","handleTextChange","e","target","value","handleSubmit","preventDefault","post","onTodoAdded","error","console"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMM,gBAAgB,GAAIC,CAAD,IAAO;AAC9BF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAOH,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAI;AACF,YAAMV,KAAK,CAACW,IAAN,CAAW,WAAX,EAAwB;AAAER,QAAAA;AAAF,OAAxB,CAAN;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP,CAFE,CAGF;;AACAF,MAAAA,KAAK,CAACU,WAAN;AACD,KALD,CAKE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,oBAAd,EAAoCA,KAApC;AACD;AACF,GAVD;;AAYA,sBACE;AAAM,IAAA,QAAQ,EAAEJ,YAAhB;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,gBAFd;AAGE,MAAA,KAAK,EAAEN,IAHT;AAIE,MAAA,QAAQ,EAAEE;AAJZ;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA9BD;;AAgCA,eAAeJ,QAAf","sourcesContent":["// components/TodoForm.js\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TodoForm = (props) => {\r\n  const [text, setText] = useState('');\r\n\r\n  const handleTextChange = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('/api/todo', { text });\r\n      setText('');\r\n      // Call the parent function to fetch todos after successfully adding a new todo\r\n      props.onTodoAdded();\r\n    } catch (error) {\r\n      console.error('Error adding todo:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add a new todo\"\r\n        value={text}\r\n        onChange={handleTextChange}\r\n      />\r\n      <button type=\"submit\">Add</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n"]},"metadata":{},"sourceType":"module"}